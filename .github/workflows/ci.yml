name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript compiler
      run: npx tsc --noEmit
      continue-on-error: true
      
    - name: Check code formatting
      run: |
        echo "Checking code formatting..."
        # Add your linting commands here when available
        # npm run lint
      continue-on-error: true

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v2
      with:
        xcode-version: latest-stable
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install NativeScript CLI
      run: npm install -g nativescript
      
    - name: Prepare iOS build
      run: ns prepare ios
      
    - name: Build iOS (Debug)
      run: ns build ios --env.production
      continue-on-error: true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-logs
        path: |
          platforms/ios/build
          *.log

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Check for outdated packages
      run: npm outdated
      continue-on-error: true

  conventional-commits:
    name: Check Commit Messages
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Validate commit messages
      run: |
        echo "Checking commit message format..."
        git log --pretty=format:"%s" origin/main..HEAD | while read line; do
          if [[ ! $line =~ ^(feat|fix|docs|style|refactor|test|chore):.+ ]]; then
            echo "❌ Invalid commit message: $line"
            echo "Commit messages should follow the pattern: <type>: <description>"
            exit 1
          fi
        done
        echo "✅ All commit messages are valid"
      continue-on-error: true

  pr-size-check:
    name: Check PR Size
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Check PR size
      run: |
        FILES_CHANGED=$(git diff --name-only origin/main...HEAD | wc -l)
        echo "Files changed: $FILES_CHANGED"
        if [ $FILES_CHANGED -gt 20 ]; then
          echo "⚠️ This PR changes $FILES_CHANGED files. Consider breaking it into smaller PRs."
        else
          echo "✅ PR size is reasonable"
        fi
      continue-on-error: true

